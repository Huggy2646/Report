1. for
             for반복문은 괄호 안에 초기화, 탈출조건, 증감식 이렇게 3개가 들어가야 됩니다.
             이중 하나라도 빠지면 오류가 발생합니다. 또한 계속 연산을 하여도 탈출조건에
             충족 되지 않으면 무한루프에 빠질 위험도 있습니다.
             ex)
                 for(int a=0; a<10; a++;)
                 {
                     ...........
                 }

2. while
             for반복문이랑 마찬가지로 while문도 반복문 입니다. 하지만 for문이랑 가장 두드러지게
             보여지는 차이점은 while문 괄호 안에는 초기화,증감식이 포함 되지 않은 점 입니다.
             그러므로 while문 위에 초기화를 하고 괄호 안에는 탈출조건만 들어가게 됩니다.
             증감식은 while문 내용 안에 포함되어집니다. for문과 마찬가지로 무한루프에 빠질 위험이
             있기 때문에 주의가 필요합니다.
              ex)
                  int i =0;
                  while(i<10)
                  {
                         .....................
                         i++;
                  }

3. if
4. break
            if문은 조건문 입니다. 어떠한 조건에 만족하면 이 if문이 실행됩니다. 만약 조건이 맞지 않으면
            if문을 뛰어 넘고 다음 코드가 연산됩니다.
            그리고 if와 break를 묶어서 설명하는 이유는 if문과 보통 결합해서 많이 쓰기 때문입니다.
            break가 연산이 되면 가장 최근에 연산되었던 반복문을 탈출하게 됩니다. 반복문을 탈출하기 때문에
            인위적으로 무한루프를 만든 후 원하는 값이 나오면 break를 사용하여 나오는 방법도 사용합니다.
             ex)
                 int i=0;
                 while(true)
                 {
                     if(i=10)
                         {
                                System.out.printf(i);
                                System.out.printfln("번 만에 드디어 탈출!");
                         }
                         System.out.printfln("탈출실패ㅠ");
                         i++;
                  }

5. return
            함수에 지정한 값을 반환 하는 키워드 입니다. 지정된 값은 정수를 지정 할 수도 있고, 실수를 지정 할 수도 있고,
            함수를 지정 할 수도 있습니다.
	 
6. import
            외부의 라이브러리를 가져와 그 라이브러리 안의 함수를 사용 가능하게 하는 키워드 입니다.
            잘 알려진 라이브러리는 beautifulsoup(python),jsoup(java), time 등이 있습니다. 

7. int
            우리는 숫자를 저장하기 위해 변수를 생성해야합니다. 그러한 변수가 어떤것이 저장되는지 결정하는 것이 보통 자료형이라고 합니다.
             int같은 경우 변수에 정수를 저장 할 수 있게 하는 자료형입니다.
             위와 같은 설명이 맞지만 조금 다른 시점으로 설명을 하면,
             숫자가 메모리에 저장되는 형태는 2진수이고, 그 2진수가 저장되는 공간이 얼마나 필요한지 결정하게 하는 것이 자료형 입니다.
             만약 10진수의 10이 저장되려면 2진수로 1010이 변환되어, 이것이 int형(4바이트)에 저장되면 00000000 00000000 00000000 00001010
             이렇게 저장이 됩니다. 만약 long에 저장이 되어지면 불필요한 저장공간이 생겨 효율이 떨어집니다. 그리고 만약 short와 byte에 저장이
             되면 연산을 할 때 메모리에 제약이 걸릴 수도 있습니다. 그러므로 보통 너무 크지않고 너무 작지 않은 정수를 int를 사용합니다.

8. double
             int와 같은 자료형이며 8바이트의 저장공간을 부여해줍니다. 보통 실수를 저장 할 때 사용되어집니다. 메모리와의 관계는 int형 설명과
             같습니다.

9.char
             char형도 자료형이며  2바이트의 저장공간을 부여해줍니다. 보통 문자를 저장 할 때 사용되어집니다. 메모리와의 관계는 int형 설명과
             같습니다.

10. try
             try같은 경우 예외처리에 보통 사용되어진다. 예외처리는 오류가 났을 때 예외처리를 한다.
             하지만 여기서 '오류가 생기면 아예 프로그램이 실행이 안되지 않나?' 라고 의문이 들수도 있다.
             앞에서 말한 오류 같은 경우 프로그램이 실행 중 생기는 오류이다. 예를 들어 requests와 BS4를 사용하여 네이버 뉴스 제목 리스트를
             가져온다고 했을 때 우리는 HTML이나 css, javascript에 사용되어지는 태그들을 가져와 사용하게 된다. 하지만 그 태그가 언젠간 바뀔 수도 있고,
             중간에 다른 태그가 사용 될 수도 있다. 이런 경우 오류가 발생하고 아무런 출력 없이 프로그램이 멈추게 된다.
             이러한 프로그램이 멈추는 것을 막고 어떠한 결과물이라도 출력하게 하는 것이 예외처리이고, 이것을 try문으로 작성한다.
	
	
	 
